name: Node.js CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:7.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Wait for MongoDB
        run: sleep 15

      - name: Run tests
        run: yarn test
        env:
          PORT: 5000
          MONGO_URI: mongodb://localhost:27017/user-service
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          IPFS_PROJECT_ID: ${{ secrets.IPFS_PROJECT_ID }}
          IPFS_PROJECT_SECRET: ${{ secrets.IPFS_PROJECT_SECRET }}
          USE_INFURA: false
          IPFS_MICROSERVICE_URL: ${{ secrets.IPFS_MICROSERVICE_URL }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          ADMIN_MAIL: ${{ secrets.ADMIN_MAIL }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          ADMIN_NIC: ${{ secrets.ADMIN_NIC }}
          ADMIN_WALLET: ${{ secrets.ADMIN_WALLET }}
          RPC_URL: ${{ secrets.RPC_URL }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          CONTRACT_ADDRESS: ${{ secrets.CONTRACT_ADDRESS }}

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/user-service:latest .

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/user-service:latest

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /path/to/your/app
            docker-compose pull
            docker-compose up -d --remove-orphans
